{"version":3,"sources":["index.js"],"names":["mapping","RangeInput","type","min","max","step","value","this","props","volume","onChange","changeHandler","className","disabled","React","Component","Toggle","checked","DrumPad","audio","createRef","playAudio","bind","handleKeyPress","state","activeStyle","document","addEventListener","removeEventListener","current","play","onPlay","currentTime","event","key","toUpperCase","setState","setTimeout","id","onClick","onKeyDown","ref","src","DrumMachine","power","display","changeVolume","togglePower","updateDisplay","e","target","pwr","trackTitle","replace","Fragment","charSet","name","content","Object","keys","map","item","i","concat","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b121457d.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ReactFCCtest from 'react-fcctest';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst url = \"https://s3.amazonaws.com/freecodecamp/drums/\";\r\nconst mapping = {\r\n\t\"Q\": \"Heater-1\",\r\n\t\"W\": \"Heater-2\",\r\n\t\"E\": \"Heater-3\",\r\n\t\"A\": \"Kick_n_Hat\",\r\n\t\"S\": \"Give_us_a_light\",\r\n\t\"D\": \"Dry_Ohh\",\r\n\t\"Z\": \"punchy_kick_1\",\r\n\t\"X\": \"Heater-6\",\r\n\t\"C\": \"side_stick_1\"\r\n}\r\n\r\nclass RangeInput extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<input type=\"range\" min=\"0\" max=\"1\" step=\"0.1\" value={this.props.volume} onChange={this.props.changeHandler} className=\"rangeInput\" disabled={this.props.disabled}/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Toggle extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<label className=\"switch\" >\r\n\t\t\t\t<input type=\"checkbox\" checked={this.props.checked} onChange={this.props.changeHandler}/>\r\n\t\t\t\t<span className=\"slider round\"></span>\r\n\t\t\t</label>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass DrumPad extends React.Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.audio = React.createRef();\r\n\t\tthis.playAudio = this.playAudio.bind(this);\r\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\r\n\t\tthis.state = {\r\n\t\t\tactiveStyle: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyPress, false);\r\n\t}\r\n\tcomponentWillUnmount(){\r\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyPress, false);\r\n\t}\r\n\r\n\tplayAudio() {\r\n\t\tthis.audio.current.play();\r\n\t\tthis.audio.current.volume = this.props.volume;\r\n\t\tthis.props.onPlay(this.props.value);\r\n\t\tthis.audio.current.currentTime = 0;\r\n\r\n\t}\r\n\r\n\thandleKeyPress(event) {\r\n\t\tif(event.key.toUpperCase() === this.props.value) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tactiveStyle: \" drum-pad--active\"\r\n\t\t\t});\r\n\t\t\tthis.playAudio();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tactiveStyle: \"\"\r\n\t\t\t\t})\r\n\t\t\t}, 100);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn(\r\n\t\t\t<button className={\"drum-pad\" +this.state.activeStyle} id={this.props.id} onClick={this.playAudio} onKeyDown={this.handleKeyPress} disabled={this.props.disabled}>\r\n\t\t\t\t{this.props.value}\r\n\t\t\t\t<audio ref={this.audio} id={this.props.value} src={this.props.src} className=\"clip\" />\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass DrumMachine extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tvolume: 0.5,\r\n\t\t\tpower: true,\r\n\t\t\tdisplay: \"\"\r\n\t\t}\r\n\t\tthis.changeVolume = this.changeVolume.bind(this);\r\n\t\tthis.togglePower = this.togglePower.bind(this);\r\n\t\tthis.updateDisplay = this.updateDisplay.bind(this);\r\n\r\n\t}\r\n\r\n\tchangeVolume(e) {\r\n\t\tthis.setState({ volume: e.target.value});\r\n\t}\r\n\r\n\ttogglePower() {\r\n\t\tconst pwr = this.state.power;\r\n\t\tthis.setState({\r\n\t\t\tpower: !pwr\r\n\t\t});\r\n\t}\r\n\t\r\n\tupdateDisplay(key) {\r\n\t\tconst regex = /-|_/g;\r\n\t\tconst trackTitle = mapping[key].replace(regex , \" \");\r\n\t\tthis.setState({\r\n\t\t\tdisplay: trackTitle\r\n\t\t})\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Helmet>\r\n\t            \t<meta charSet=\"utf-8\" />\r\n\t            \t<title>ReactJS - Drum Machine</title>\r\n\t            \t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n\t        \t</Helmet>\r\n\t\t\t\t<div className={!this.state.power ? `container-disabled container`: `container`} id=\"drum-machine\">\r\n\t\t\t\t\t<div className=\"drumpad-container\">\r\n\t\t\t\t\t\t{Object.keys(mapping).map((item, i) => (\r\n\t\t\t\t\t\t\t<DrumPad id={\"sound\".concat(item)} key={i} value={item} src={url.concat(mapping[item]).concat(\".mp3\")} volume={this.state.volume} onPlay={this.updateDisplay} disabled={!this.state.power}/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"control-container\">\r\n\t\t\t\t\t\t<div id=\"powerBar\">\r\n\t\t\t\t\t\t\t<div className=\"label\">Power</div>\r\n\t\t\t\t\t\t\t<Toggle changeHandler={this.togglePower} checked={this.state.power}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"displayBar\">\r\n\t\t\t\t\t\t\t<div id=\"display\">{this.state.display}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"volumeBar\">\r\n\t\t\t\t\t\t\t<RangeInput changeHandler={this.changeVolume} volume={this.state.volume} disabled={!this.state.power}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ReactFCCtest />\r\n\t\t\t\t</div>\t\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  \t<DrumMachine  />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}